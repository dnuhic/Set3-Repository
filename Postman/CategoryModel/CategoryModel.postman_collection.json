{
	"info": {
		"_postman_id": "0d48efa0-f7ff-49bd-80e8-28815219f778",
		"name": "CategoryModel",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "GetCategoryModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var category = pm.response.json()[0];",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check data types\", function () {",
							"    pm.expect(category.id).to.be.a(\"number\");",
							"    pm.expect(category.name).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"Confirm category contains all expected keys\", function () {",
							"    pm.expect(category).to.have.all.keys(\"id\",\"name\");",
							"});",
							"",
							"pm.test(\"Category response matches expected JSON schema\", function () {",
							"    var schema = {",
							"        \"properties\": {",
							"            \"id\": { \"type\": \"number\" },",
							"            \"name\": { \"type\": \"string\" }",
							"        }",
							"    };",
							"    pm.expect(category).to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Check a value from the response headers\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "https://localhost:7194/api/CategoryModels",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7194",
					"path": [
						"api",
						"CategoryModels"
					]
				}
			},
			"response": []
		},
		{
			"name": "PostCategoryModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 201\"] = responseCode.code === 201;",
							"",
							"tests[\"Body matches string\"] = responseBody.has(\"id\");",
							"tests[\"Body matches string\"] = responseBody.has(\"name\");",
							"",
							"var jsonData = JSON.parse(responseBody);",
							"postman.setEnvironmentVariable(\"idCategory\", jsonData.id);"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"Name\": \"Food 2\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://localhost:7194/api/CategoryModels",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7194",
					"path": [
						"api",
						"CategoryModels"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetOneCategoryModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"var category = pm.response.json();",
							"",
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Check data types\", function () {",
							"    pm.expect(category.id).to.be.a(\"number\");",
							"    pm.expect(category.name).to.be.a(\"string\");",
							"});",
							"",
							"pm.test(\"Confirm category contains all expected keys\", function () {",
							"    pm.expect(category).to.have.all.keys(\"id\",\"name\");",
							"});",
							"",
							"pm.test(\"Category response matches expected JSON schema\", function () {",
							"    var schema = {",
							"        \"properties\": {",
							"            \"id\": { \"type\": \"number\" },",
							"            \"name\": { \"type\": \"string\" }",
							"        }",
							"    };",
							"    pm.expect(category).to.have.jsonSchema(schema);",
							"});",
							"",
							"pm.test(\"Check a value from the response headers\", () => {",
							"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json; charset=utf-8');",
							"});",
							"",
							"tests[\"Status code is 200\"] = responseCode.code === 200;",
							"",
							"tests[\"Body matches string\"] = responseBody.has(\"id\");",
							"",
							"tests[\"Body matches name\"] = responseBody.has(\"Food 2\");",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "https://localhost:7194/api/CategoryModels/{{idCategory}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7194",
					"path": [
						"api",
						"CategoryModels",
						"{{idCategory}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "PutCategoryModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [
					{
						"key": "",
						"value": "",
						"disabled": true
					},
					{
						"key": "Content-Type",
						"value": "application/json"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n        \"id\" : {{idCategory}},\n        \"name\": \"Fast food\"\n    }"
				},
				"url": {
					"raw": "https://localhost:7194/api/CategoryModels/{{idCategory}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7194",
					"path": [
						"api",
						"CategoryModels",
						"{{idCategory}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteCategoryModel",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"tests[\"Status code is 204\"] = responseCode.code === 204;"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "https://localhost:7194/api/CategoryModels/{{idCategory}}",
					"protocol": "https",
					"host": [
						"localhost"
					],
					"port": "7194",
					"path": [
						"api",
						"CategoryModels",
						"{{idCategory}}"
					]
				}
			},
			"response": []
		}
	]
}