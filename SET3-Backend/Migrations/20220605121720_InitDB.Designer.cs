// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SET3_Backend.Database;

#nullable disable

namespace SET3_Backend.Migrations
{
    [DbContext(typeof(Context))]
    [Migration("20220605121720_InitDB")]
    partial class InitDB
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SET3_Backend.Models.ActionModel", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"), 1L, 1);

                    b.Property<int>("actionType")
                        .HasColumnType("int");

                    b.HasKey("id");

                    b.ToTable("ActionModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.BrRac", b =>
                {
                    b.Property<string>("IdRac")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("BrOznRac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OznNapUr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OznPosPr")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRac");

                    b.ToTable("BrRac");
                });

            modelBuilder.Entity("SET3_Backend.Models.CashRegisterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Installed")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("CashRegisterModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.CategoryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Tax")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("CategoryModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.DeliveryModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("DeliveryModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.ExportShopModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<DateTime>("DateTime")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ExportShopModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.FiscalBillModel", b =>
                {
                    b.Property<string>("IdFiscal")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("JIR")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RacunIdRacun")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("ZaglavljeIdZag")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdFiscal");

                    b.HasIndex("RacunIdRacun");

                    b.HasIndex("ZaglavljeIdZag");

                    b.ToTable("FiscalBillModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.LoggingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ActionId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<int>("UserModelId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ActionId");

                    b.HasIndex("UserModelId");

                    b.ToTable("LoggingModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.MeasuringUnit", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("MeasuringUnitName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MeasuringUnits");
                });

            modelBuilder.Entity("SET3_Backend.Models.OrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("OrderModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.Porez", b =>
                {
                    b.Property<string>("IdPorez")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Iznos")
                        .HasColumnType("float");

                    b.Property<double>("Osnovica")
                        .HasColumnType("float");

                    b.Property<string>("RacunIdRacun")
                        .HasColumnType("nvarchar(450)");

                    b.Property<double>("Stopa")
                        .HasColumnType("float");

                    b.HasKey("IdPorez");

                    b.HasIndex("RacunIdRacun");

                    b.ToTable("Porez");
                });

            modelBuilder.Entity("SET3_Backend.Models.ProductModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Barcode")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("BarcodeText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("MeasuringUnit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<float>("Price")
                        .HasColumnType("real");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.ProductShopIntertable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductShopIntertables");
                });

            modelBuilder.Entity("SET3_Backend.Models.ProductUserOrderIntertable", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("UserOrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ProductUserOrderIntertables");
                });

            modelBuilder.Entity("SET3_Backend.Models.Racun", b =>
                {
                    b.Property<string>("IdRacun")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DatVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<double>("IznosUkupno")
                        .HasColumnType("float");

                    b.Property<string>("NacinPlac")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OIB")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OibOper")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("OznSlijed")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("USustPdv")
                        .HasColumnType("bit");

                    b.Property<string>("ZastKod")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("brojRacunaIdRac")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdRacun");

                    b.HasIndex("brojRacunaIdRac");

                    b.ToTable("Racun");
                });

            modelBuilder.Entity("SET3_Backend.Models.RoleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<bool>("DeleteAccess")
                        .HasColumnType("bit");

                    b.Property<bool>("ReadAccess")
                        .HasColumnType("bit");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("WriteAccess")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("RoleModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.SecurityQuestionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Question")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("SecurityQuestionModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.ShopModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adress")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ReceiptType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("ShopModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.StockModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("StockModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.TableModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<bool>("Taken")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.ToTable("TableModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.UserModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Answer")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Deleted")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("QuestionId")
                        .HasColumnType("int");

                    b.Property<string>("RoleName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TFA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("UserModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.UserOrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<int>("CashRegisterId")
                        .HasColumnType("int");

                    b.Property<bool>("Done")
                        .HasColumnType("bit");

                    b.Property<int>("ShopId")
                        .HasColumnType("int");

                    b.Property<int>("TableId")
                        .HasColumnType("int");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("UserOrderModels");
                });

            modelBuilder.Entity("SET3_Backend.Models.Zaglavlje", b =>
                {
                    b.Property<string>("IdZag")
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime>("DatumVrijeme")
                        .HasColumnType("datetime2");

                    b.Property<string>("IdPoruke")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdZag");

                    b.ToTable("Zaglavlje");
                });

            modelBuilder.Entity("SET3_Backend.Models.FiscalBillModel", b =>
                {
                    b.HasOne("SET3_Backend.Models.Racun", "Racun")
                        .WithMany()
                        .HasForeignKey("RacunIdRacun")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SET3_Backend.Models.Zaglavlje", "Zaglavlje")
                        .WithMany()
                        .HasForeignKey("ZaglavljeIdZag")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Racun");

                    b.Navigation("Zaglavlje");
                });

            modelBuilder.Entity("SET3_Backend.Models.LoggingModel", b =>
                {
                    b.HasOne("SET3_Backend.Models.ActionModel", "Action")
                        .WithMany()
                        .HasForeignKey("ActionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SET3_Backend.Models.UserModel", "UserModel")
                        .WithMany()
                        .HasForeignKey("UserModelId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Action");

                    b.Navigation("UserModel");
                });

            modelBuilder.Entity("SET3_Backend.Models.Porez", b =>
                {
                    b.HasOne("SET3_Backend.Models.Racun", null)
                        .WithMany("pDV")
                        .HasForeignKey("RacunIdRacun");
                });

            modelBuilder.Entity("SET3_Backend.Models.Racun", b =>
                {
                    b.HasOne("SET3_Backend.Models.BrRac", "brojRacuna")
                        .WithMany()
                        .HasForeignKey("brojRacunaIdRac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("brojRacuna");
                });

            modelBuilder.Entity("SET3_Backend.Models.Racun", b =>
                {
                    b.Navigation("pDV");
                });
#pragma warning restore 612, 618
        }
    }
}
